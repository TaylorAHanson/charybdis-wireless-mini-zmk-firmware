#include <dt-bindings/zmk/mouse.h>
#include <behaviors/mouse_keys.dtsi>
#include "macros.dtsi"
#include "behaviors.dtsi"
#include "combos.dtsi"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    /* input config for mouse move mode */

    trackball_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <0 2 7>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_Y>;
        scale-multiplier = <4>;
        scale-divisor = <5>;

        // bindings = <&ib_toggle_layer 7>;
    };

    /* input config for snipe mode */

    trackball_snipe_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <8>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_Y>;
        scale-multiplier = <1>;
        scale-divisor = <6>;
    };

    /* input config for mouse scroll mode */

    trackball_scroll_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <9>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_MISC>;
        y-input-code = <INPUT_REL_WHEEL>;
        y-invert;
        bindings = <&ib_wheel_scaler 1 14>;
    };

    /* define a resolution down scaler only for INPUT_REL_WHEEL */

    ib_wheel_scaler: ib_wheel_scaler {
        compatible = "zmk,input-behavior-scaler";
        #binding-cells = <2>;
        evt-type = <INPUT_EV_REL>;
        input-code = <INPUT_REL_WHEEL>;
    };

    /* adjust cooldown waiting period for mouse key layer after activated */

    ib_toggle_layer: ib_toggle_layer {
        compatible = "zmk,input-behavior-tog-layer";
        #binding-cells = <1>;
        time-to-live-ms = <750>;
    };

    // ╭──────┬──────┬──────┬──────┬──────┬──────╮  ╭──────┬──────┬──────┬──────┬──────┬──────╮
    //    00     01     02     03    04      05        06     07     08     09     10     11
    // ├──────┼──────┼──────┼──────┼──────┼──────┤  ├──────┼──────┼──────┼──────┼──────┼──────┤
    //    12     13     14     15    16      17        18     19     20     21     22     23
    // ├──────┼──────┼──────┼──────┼──────┼──────┤  ├──────┼──────┼──────┼──────┼──────┼──────┤
    //    24     25     26     27    28      29        30     31     32     33     34     35
    // ╰──────┴──────┴──────┼──────┼──────┼──────┤  ├──────┼──────┼──────┴──────┴──────┴──────╯
    //                         36     37     38        39     40
    //                      ╰──────┴──────┴──────╯  ╰──────┴──────╯
    // #define BASE    0
    // #define NUM     1
    // #define NAV     2
    // #define SYM     3
    // #define GAME    4
    // #define PHOTOS  5
    // #define EXTRAS  6
    // #define MOUSE   7
    // #define SLOW    8
    // #define SCROLL  9

    keymap {
        compatible = "zmk,keymap";

        BASE {
            bindings = <
&kp ESCAPE                 &kp Q  &kp W                &kp E             &kp R                  &kp T           &kp Y            &kp U                    &kp I              &kp O                  &kp P          &kp NON_US_BACKSLASH
&kp TAB                    &kp A  &hm_left LEFT_ALT S  &hm_left LCTRL D  &hm_left LEFT_SHIFT F  &kp G           &kp H            &hm_right RIGHT_SHIFT J  &hm_right RCTRL K  &hm_right RIGHT_ALT L  &kp SEMICOLON  &kp SQT
&mt LEFT_WIN LEFT_BRACKET  &kp Z  &kp X                &kp C             &kp V                  &kp B           &kp N            &kp M                    &kp COMMA          &kp PERIOD             &kp SLASH      &mt RIGHT_WIN RIGHT_BRACKET
                                                       &mo 1             &lt 0 SPACE            &lt 0 DELETE    &lt 0 BACKSPACE  &mt LEFT_SHIFT ENTER
            >;
        };

        Mouse {
            bindings = <
&trans        &none  &none         &none             &none           &none     &kp F12        &kp K_BACK      &msc SCRL_UP    &kp K_FORWARD    &none  &none
&trans        &none  &kp LEFT_ALT  &kp LEFT_CONTROL  &kp LEFT_SHIFT  &none     &kp K_REFRESH  &mkp MB1        &mkp MB2        &mkp MB3         &none  &none
&kp LEFT_WIN  &none  &none         &none             &none           &none     &none          &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_RIGHT  &none  &none
                                   &trans            &trans          &trans    &trans         &trans
            >;
        };

        arrow {
            bindings = <
&trans    &trans  &trans    &trans     &trans     &trans    &trans  &kp HOME  &kp UP    &kp END    &trans  &trans
&trans    &trans  &kp LALT  &kp LCTRL  &kp LSHFT  &trans    &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &trans
&kp LGUI  &trans  &trans    &trans     &trans     &trans    &trans  &trans    &trans    &trans     &trans  &trans
                            &trans     &trans     &trans    &trans  &trans
            >;
        };

        symbol {
            bindings = <
&trans    &trans  &trans    &trans     &trans     &trans    &trans     &kp N7  &kp N8  &kp N9  &kp MINUS  &trans
&trans    &trans  &kp LALT  &kp LCTRL  &kp LSHFT  &trans    &trans     &kp N4  &kp N5  &kp N6  &kp EQUAL  &trans
&kp LGUI  &trans  &trans    &trans     &trans     &trans    &kp GRAVE  &kp N1  &kp N2  &kp N3  &kp N0     &trans
                            &trans     &trans     &trans    &trans     &trans
            >;
        };
    };
};
